{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport { first } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@app/_services\";\nimport * as i4 from \"@angular/common\";\nconst _c0 = a0 => ({\n  \"is-invalid\": a0\n});\nfunction EditStatusComponent_div_10_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Pet's name is required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction EditStatusComponent_div_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 15);\n    i0.ɵɵtemplate(1, EditStatusComponent_div_10_div_1_Template, 2, 0, \"div\", 16);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.f.name.errors.required);\n  }\n}\nfunction EditStatusComponent_div_15_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Requested name is required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction EditStatusComponent_div_15_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 15);\n    i0.ɵɵtemplate(1, EditStatusComponent_div_15_div_1_Template, 2, 0, \"div\", 16);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.f.firstName.errors.required);\n  }\n}\nfunction EditStatusComponent_div_26_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Type of pet is required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction EditStatusComponent_div_26_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 15);\n    i0.ɵɵtemplate(1, EditStatusComponent_div_26_div_1_Template, 2, 0, \"div\", 16);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.f.status.errors.required);\n  }\n}\nfunction EditStatusComponent_span_29_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"span\", 17);\n  }\n}\nexport let EditStatusComponent = /*#__PURE__*/(() => {\n  class EditStatusComponent {\n    formBuilder;\n    route;\n    router;\n    requestService;\n    alertService;\n    accountService;\n    petService;\n    form;\n    loading = false;\n    submitted = false;\n    requestId;\n    request;\n    constructor(formBuilder, route, router, requestService, alertService, accountService, petService) {\n      this.formBuilder = formBuilder;\n      this.route = route;\n      this.router = router;\n      this.requestService = requestService;\n      this.alertService = alertService;\n      this.accountService = accountService;\n      this.petService = petService;\n    }\n    ngOnInit() {\n      this.form = this.formBuilder.group({\n        status: ['', Validators.required]\n      });\n      this.route.params.subscribe(params => {\n        this.requestId = params['id'];\n        this.loadRequest(this.requestId);\n      });\n    }\n    // Convenience getter for easy access to form fields\n    get f() {\n      return this.form.controls;\n    }\n    loadRequest(id) {\n      this.requestService.getRequestById(id).pipe(first()).subscribe(request => {\n        requests.forEach(request => {\n          this.petService.getById(request.petId).subscribe(pet => {\n            request.pet = pet;\n          }, error => {\n            console.error('Error fetching pet details:', error);\n          });\n          this.accountService.getById(request.accountId).subscribe(user => {\n            request.user = user;\n          }, error => {\n            console.error('Error fetching user details:', error);\n          });\n        });\n        this.request = request;\n        // Populate form fields with request details\n        this.form.patchValue({\n          status: request.status\n        });\n      }, error => {\n        this.alertService.error('Error loading request details');\n        this.router.navigate(['/requests']); // Redirect to requests list on error\n      });\n    }\n    onSubmit() {\n      this.submitted = true;\n      // Stop here if form is invalid\n      if (this.form.invalid) {\n        return;\n      }\n      this.loading = true;\n      this.requestService.updateRequestStatus(this.requestId, this.f.status.value).pipe(first()).subscribe(() => {\n        this.alertService.success('Request status updated successfully', {\n          keepAfterRouteChange: true\n        });\n        this.router.navigate(['/requests']); // Redirect to requests list on success\n      }, error => {\n        this.alertService.error('Error updating request status');\n        this.loading = false;\n      });\n    }\n    onCancel() {\n      this.router.navigate(['/requests']); // Redirect to requests list on cancel\n    }\n    static ɵfac = function EditStatusComponent_Factory(t) {\n      return new (t || EditStatusComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.ActivatedRoute), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i3.RequestService), i0.ɵɵdirectiveInject(i3.AlertService), i0.ɵɵdirectiveInject(i3.AccountService), i0.ɵɵdirectiveInject(i3.PetService));\n    };\n    static ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: EditStatusComponent,\n      selectors: [[\"ng-component\"]],\n      decls: 33,\n      vars: 17,\n      consts: [[3, \"ngSubmit\", \"formGroup\"], [1, \"form-group\"], [\"width\", \"200\", \"height\", \"200\", 3, \"src\", \"alt\"], [1, \"form-row\"], [1, \"form-group\", \"col-5\"], [\"type\", \"text\", \"formControlName\", \"name\", 1, \"form-control\", 3, \"ngClass\"], [\"class\", \"invalid-feedback\", 4, \"ngIf\"], [\"type\", \"text\", \"formControlName\", \"firstName\", 1, \"form-control\", 3, \"ngClass\"], [\"formControlName\", \"status\", 1, \"form-control\", 3, \"ngClass\"], [\"value\", \"Pending\"], [\"value\", \"Processing\"], [\"value\", \"Approved\"], [1, \"btn\", \"btn-primary\", 3, \"disabled\"], [\"class\", \"spinner-border spinner-border-sm mr-1\", 4, \"ngIf\"], [\"type\", \"button\", 1, \"btn\", \"btn-secondary\", \"ml-2\", 3, \"click\"], [1, \"invalid-feedback\"], [4, \"ngIf\"], [1, \"spinner-border\", \"spinner-border-sm\", \"mr-1\"]],\n      template: function EditStatusComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"form\", 0);\n          i0.ɵɵlistener(\"ngSubmit\", function EditStatusComponent_Template_form_ngSubmit_0_listener() {\n            return ctx.onSubmit();\n          });\n          i0.ɵɵelementStart(1, \"div\", 1)(2, \"label\");\n          i0.ɵɵtext(3, \"Image\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(4, \"img\", 2);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(5, \"div\", 3)(6, \"div\", 4)(7, \"label\");\n          i0.ɵɵtext(8, \"Name\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(9, \"input\", 5);\n          i0.ɵɵtemplate(10, EditStatusComponent_div_10_Template, 2, 1, \"div\", 6);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(11, \"div\", 4)(12, \"label\");\n          i0.ɵɵtext(13, \"Requested By\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(14, \"input\", 7);\n          i0.ɵɵtemplate(15, EditStatusComponent_div_15_Template, 2, 1, \"div\", 6);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(16, \"div\", 4)(17, \"label\");\n          i0.ɵɵtext(18, \"Status\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(19, \"select\", 8)(20, \"option\", 9);\n          i0.ɵɵtext(21, \"Pending\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(22, \"option\", 10);\n          i0.ɵɵtext(23, \"Processing\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(24, \"option\", 11);\n          i0.ɵɵtext(25, \"Approved\");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵtemplate(26, EditStatusComponent_div_26_Template, 2, 1, \"div\", 6);\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(27, \"div\", 1)(28, \"button\", 12);\n          i0.ɵɵtemplate(29, EditStatusComponent_span_29_Template, 1, 0, \"span\", 13);\n          i0.ɵɵtext(30, \" Save \");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(31, \"button\", 14);\n          i0.ɵɵlistener(\"click\", function EditStatusComponent_Template_button_click_31_listener() {\n            return ctx.onCancel();\n          });\n          i0.ɵɵtext(32, \"Cancel\");\n          i0.ɵɵelementEnd()()();\n        }\n        if (rf & 2) {\n          i0.ɵɵproperty(\"formGroup\", ctx.form);\n          i0.ɵɵadvance(4);\n          i0.ɵɵpropertyInterpolate(\"alt\", ctx.request.pet.name);\n          i0.ɵɵproperty(\"src\", \"http://localhost:4000/\" + ctx.request.pet.image, i0.ɵɵsanitizeUrl);\n          i0.ɵɵadvance(5);\n          i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(11, _c0, ctx.submitted && ctx.f.name.errors));\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngIf\", ctx.submitted && ctx.f.name.errors);\n          i0.ɵɵadvance(4);\n          i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(13, _c0, ctx.submitted && ctx.f.firstName.errors));\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngIf\", ctx.submitted && ctx.f.firstName.errors);\n          i0.ɵɵadvance(4);\n          i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(15, _c0, ctx.submitted && ctx.f.status.errors));\n          i0.ɵɵadvance(7);\n          i0.ɵɵproperty(\"ngIf\", ctx.submitted && ctx.f.status.errors);\n          i0.ɵɵadvance(2);\n          i0.ɵɵproperty(\"disabled\", ctx.loading);\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngIf\", ctx.loading);\n        }\n      },\n      dependencies: [i4.NgClass, i4.NgIf, i1.ɵNgNoValidate, i1.NgSelectOption, i1.ɵNgSelectMultipleOption, i1.DefaultValueAccessor, i1.SelectControlValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName],\n      encapsulation: 2\n    });\n  }\n  return EditStatusComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}