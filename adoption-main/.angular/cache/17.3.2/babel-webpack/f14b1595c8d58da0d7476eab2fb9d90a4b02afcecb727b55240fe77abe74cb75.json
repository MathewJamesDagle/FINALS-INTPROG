{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { Validators } from '@angular/forms';\nlet RatingComponent = class RatingComponent {\n  formBuilder;\n  router;\n  route;\n  feedbackService;\n  alertService;\n  form;\n  id;\n  loading = false;\n  submitted = false;\n  isAddMode;\n  constructor(formBuilder, router, route, feedbackService, alertService) {\n    this.formBuilder = formBuilder;\n    this.router = router;\n    this.route = route;\n    this.feedbackService = feedbackService;\n    this.alertService = alertService;\n  }\n  ngOnInit() {\n    this.id = this.route.snapshot.params['id'];\n    this.isAddMode = !this.id;\n    this.form = this.formBuilder.group({\n      email: ['', [Validators.required, Validators.email]],\n      message: ['', Validators.required],\n      rating: ['', Validators.required]\n    });\n    // if (!this.isAddMode) {\n    //     this.feedbackService.getById(this.id)\n    //         .pipe(first())\n    //         .subscribe(feedback => {\n    //             this.form.patchValue(feedback);\n    //         });\n    // }\n  }\n  // Convenience getter for easy access to form fields\n  get f() {\n    return this.form.controls;\n  }\n  onSubmit() {\n    this.submitted = true;\n    // Reset alerts on submit\n    this.alertService.clear();\n    // Stop here if form is invalid\n    if (this.form.invalid) {\n      return;\n    }\n    this.loading = true;\n    // if (this.isAddMode) {\n    //     this.createFeedback();\n    // } else {\n    //     this.updateFeedback();\n    // }\n  }\n};\nRatingComponent = __decorate([Component({\n  templateUrl: 'rating.component.html'\n})], RatingComponent);\nexport { RatingComponent };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}