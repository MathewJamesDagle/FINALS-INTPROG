{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport { first } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@app/_services\";\nimport * as i4 from \"@angular/common\";\nconst _c0 = a0 => ({\n  \"is-invalid\": a0\n});\nfunction EditStatusComponent_h1_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"h1\");\n    i0.ɵɵtext(1, \"Add Pets\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction EditStatusComponent_h1_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"h1\");\n    i0.ɵɵtext(1, \"Edit Pet\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction EditStatusComponent_div_12_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Pet's name is required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction EditStatusComponent_div_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 16);\n    i0.ɵɵtemplate(1, EditStatusComponent_div_12_div_1_Template, 2, 0, \"div\", 0);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.f.name.errors.required);\n  }\n}\nfunction EditStatusComponent_div_17_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Requested name is required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction EditStatusComponent_div_17_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 16);\n    i0.ɵɵtemplate(1, EditStatusComponent_div_17_div_1_Template, 2, 0, \"div\", 0);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.f.firstName.errors.required);\n  }\n}\nfunction EditStatusComponent_div_28_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Type of pet is required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction EditStatusComponent_div_28_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 16);\n    i0.ɵɵtemplate(1, EditStatusComponent_div_28_div_1_Template, 2, 0, \"div\", 0);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.f.status.errors.required);\n  }\n}\nfunction EditStatusComponent_span_31_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"span\", 17);\n  }\n}\nexport let EditStatusComponent = /*#__PURE__*/(() => {\n  class EditStatusComponent {\n    formBuilder;\n    router;\n    route;\n    petService;\n    alertService;\n    form;\n    loading = false;\n    submitted = false;\n    isAddMode = true;\n    selectedFile = null;\n    pets = []; // Array to hold all pets\n    constructor(formBuilder, router, route, petService, alertService) {\n      this.formBuilder = formBuilder;\n      this.router = router;\n      this.route = route;\n      this.petService = petService;\n      this.alertService = alertService;\n    }\n    ngOnInit() {\n      this.form = this.formBuilder.group({\n        name: ['', Validators.required],\n        breed: ['', Validators.required],\n        description: ['', Validators.required],\n        sex: ['', Validators.required],\n        age: ['', Validators.required],\n        color: ['', Validators.required],\n        size: ['', Validators.required],\n        type: ['', Validators.required],\n        image: ['']\n      });\n      this.route.params.subscribe(params => {\n        if (params['id']) {\n          this.isAddMode = false;\n          this.loadPet(params['id']);\n        }\n      });\n      // Load all pets when component initializes\n      this.loadAllPets();\n    }\n    onFileSelected(event) {\n      const file = event.target.files[0];\n      if (file) {\n        this.selectedFile = file;\n      }\n    }\n    // Convenience getter for easy access to form fields\n    get f() {\n      return this.form.controls;\n    }\n    onSubmit() {\n      this.submitted = true;\n      this.alertService.clear();\n      if (this.form.invalid) {\n        return;\n      }\n      this.loading = true;\n      const formData = new FormData();\n      formData.append('name', this.form.get('name')?.value);\n      formData.append('breed', this.form.get('breed')?.value);\n      formData.append('description', this.form.get('description')?.value);\n      formData.append('sex', this.form.get('sex')?.value);\n      formData.append('age', this.form.get('age')?.value);\n      formData.append('color', this.form.get('color')?.value);\n      formData.append('size', this.form.get('size')?.value);\n      formData.append('type', this.form.get('type')?.value);\n      if (this.selectedFile) {\n        formData.append('image', this.selectedFile, this.selectedFile.name);\n      }\n      const request = this.isAddMode ? this.petService.create(formData) : this.petService.update(this.route.snapshot.params['id'], formData);\n      request.pipe(first()).subscribe({\n        next: () => {\n          this.alertService.success('Pet saved successfully', {\n            keepAfterRouteChange: true\n          });\n          this.router.navigate(['/pets']);\n        },\n        error: error => {\n          this.alertService.error(error);\n          this.loading = false;\n        }\n      });\n    }\n    loadPet(id) {\n      this.petService.getById(id).pipe(first()).subscribe(pet => {\n        this.form.patchValue(pet);\n      });\n    }\n    loadAllPets() {\n      this.petService.getAllPets().pipe(first()).subscribe(pets => {\n        this.pets = pets;\n      });\n    }\n    onCancel() {\n      this.router.navigate(['/pets']);\n    }\n    static ɵfac = function EditStatusComponent_Factory(t) {\n      return new (t || EditStatusComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i2.ActivatedRoute), i0.ɵɵdirectiveInject(i3.PetService), i0.ɵɵdirectiveInject(i3.AlertService));\n    };\n    static ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: EditStatusComponent,\n      selectors: [[\"ng-component\"]],\n      decls: 35,\n      vars: 19,\n      consts: [[4, \"ngIf\"], [3, \"ngSubmit\", \"formGroup\"], [1, \"form-group\"], [\"width\", \"200\", \"height\", \"200\", 3, \"src\", \"alt\"], [1, \"form-row\"], [1, \"form-group\", \"col-5\"], [\"type\", \"text\", \"formControlName\", \"name\", 1, \"form-control\", 3, \"ngClass\"], [\"class\", \"invalid-feedback\", 4, \"ngIf\"], [\"type\", \"text\", \"formControlName\", \"firstName\", 1, \"form-control\", 3, \"ngClass\"], [\"formControlName\", \"status\", 1, \"form-control\", 3, \"ngClass\"], [\"value\", \"Pending\"], [\"value\", \"Processing\"], [\"value\", \"Approved\"], [1, \"btn\", \"btn-primary\", 3, \"disabled\"], [\"class\", \"spinner-border spinner-border-sm mr-1\", 4, \"ngIf\"], [\"type\", \"button\", 1, \"btn\", \"btn-secondary\", \"ml-2\", 3, \"click\"], [1, \"invalid-feedback\"], [1, \"spinner-border\", \"spinner-border-sm\", \"mr-1\"]],\n      template: function EditStatusComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵtemplate(0, EditStatusComponent_h1_0_Template, 2, 0, \"h1\", 0)(1, EditStatusComponent_h1_1_Template, 2, 0, \"h1\", 0);\n          i0.ɵɵelementStart(2, \"form\", 1);\n          i0.ɵɵlistener(\"ngSubmit\", function EditStatusComponent_Template_form_ngSubmit_2_listener() {\n            return ctx.onSubmit();\n          });\n          i0.ɵɵelementStart(3, \"div\", 2)(4, \"label\");\n          i0.ɵɵtext(5, \"Image\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(6, \"img\", 3);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(7, \"div\", 4)(8, \"div\", 5)(9, \"label\");\n          i0.ɵɵtext(10, \"Name\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(11, \"input\", 6);\n          i0.ɵɵtemplate(12, EditStatusComponent_div_12_Template, 2, 1, \"div\", 7);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(13, \"div\", 5)(14, \"label\");\n          i0.ɵɵtext(15, \"Requested By\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(16, \"input\", 8);\n          i0.ɵɵtemplate(17, EditStatusComponent_div_17_Template, 2, 1, \"div\", 7);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(18, \"div\", 5)(19, \"label\");\n          i0.ɵɵtext(20, \"Status\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(21, \"select\", 9)(22, \"option\", 10);\n          i0.ɵɵtext(23, \"Pending\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(24, \"option\", 11);\n          i0.ɵɵtext(25, \"Processing\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(26, \"option\", 12);\n          i0.ɵɵtext(27, \"Approved\");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵtemplate(28, EditStatusComponent_div_28_Template, 2, 1, \"div\", 7);\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(29, \"div\", 2)(30, \"button\", 13);\n          i0.ɵɵtemplate(31, EditStatusComponent_span_31_Template, 1, 0, \"span\", 14);\n          i0.ɵɵtext(32, \" Save \");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(33, \"button\", 15);\n          i0.ɵɵlistener(\"click\", function EditStatusComponent_Template_button_click_33_listener() {\n            return ctx.onCancel();\n          });\n          i0.ɵɵtext(34, \"Cancel\");\n          i0.ɵɵelementEnd()()();\n        }\n        if (rf & 2) {\n          i0.ɵɵproperty(\"ngIf\", ctx.isAddMode);\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngIf\", !ctx.isAddMode);\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"formGroup\", ctx.form);\n          i0.ɵɵadvance(4);\n          i0.ɵɵpropertyInterpolate(\"alt\", ctx.request.pet.name);\n          i0.ɵɵproperty(\"src\", \"http://localhost:4000/\" + ctx.request.pet.image, i0.ɵɵsanitizeUrl);\n          i0.ɵɵadvance(5);\n          i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(13, _c0, ctx.submitted && ctx.f.name.errors));\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngIf\", ctx.submitted && ctx.f.name.errors);\n          i0.ɵɵadvance(4);\n          i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(15, _c0, ctx.submitted && ctx.f.firstName.errors));\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngIf\", ctx.submitted && ctx.f.firstName.errors);\n          i0.ɵɵadvance(4);\n          i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(17, _c0, ctx.submitted && ctx.f.status.errors));\n          i0.ɵɵadvance(7);\n          i0.ɵɵproperty(\"ngIf\", ctx.submitted && ctx.f.status.errors);\n          i0.ɵɵadvance(2);\n          i0.ɵɵproperty(\"disabled\", ctx.loading);\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngIf\", ctx.loading);\n        }\n      },\n      dependencies: [i4.NgClass, i4.NgIf, i1.ɵNgNoValidate, i1.NgSelectOption, i1.ɵNgSelectMultipleOption, i1.DefaultValueAccessor, i1.SelectControlValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName],\n      encapsulation: 2\n    });\n  }\n  return EditStatusComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}