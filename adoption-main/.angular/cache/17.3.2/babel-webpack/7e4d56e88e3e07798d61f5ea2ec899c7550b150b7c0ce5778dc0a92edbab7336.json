{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { Validators } from '@angular/forms';\nimport { first } from 'rxjs/operators';\nlet AddPetComponent = class AddPetComponent {\n  constructor(formBuilder, router, route, petService, alertService) {\n    this.formBuilder = formBuilder;\n    this.router = router;\n    this.route = route;\n    this.petService = petService;\n    this.alertService = alertService;\n    this.loading = false;\n    this.submitted = false;\n    this.isAddMode = true;\n    this.selectedFile = null;\n    this.pets = []; // Array to hold all pets\n  }\n  ngOnInit() {\n    this.form = this.formBuilder.group({\n      name: ['', Validators.required],\n      sex: ['', Validators.required],\n      age: ['', Validators.required],\n      color: ['', Validators.required],\n      size: ['', Validators.required],\n      type: ['', Validators.required],\n      image: ['']\n    });\n    this.route.params.subscribe(params => {\n      if (params['id']) {\n        this.isAddMode = false;\n        this.loadPet(params['id']);\n      }\n    });\n    // Load all pets when component initializes\n    this.loadAllPets();\n  }\n  onFileSelected(event) {\n    const file = event.target.files[0];\n    if (file) {\n      this.selectedFile = file;\n    }\n  }\n  // Convenience getter for easy access to form fields\n  get f() {\n    return this.form.controls;\n  }\n  onSubmit() {\n    this.submitted = true;\n    this.alertService.clear();\n    if (this.form.invalid) {\n      return;\n    }\n    this.loading = true;\n    const formData = new FormData();\n    formData.append('name', this.form.get('name')?.value);\n    formData.append('breed', this.form.get('breed')?.value);\n    formData.append('description', this.form.get('description')?.value);\n    formData.append('sex', this.form.get('sex')?.value);\n    formData.append('age', this.form.get('age')?.value);\n    formData.append('color', this.form.get('color')?.value);\n    formData.append('size', this.form.get('size')?.value);\n    formData.append('type', this.form.get('type')?.value);\n    if (this.selectedFile) {\n      formData.append('image', this.selectedFile, this.selectedFile.name);\n    }\n    const request = this.isAddMode ? this.petService.create(formData) : this.petService.update(this.route.snapshot.params['id'], formData);\n    request.pipe(first()).subscribe({\n      next: () => {\n        this.alertService.success('Pet saved successfully', {\n          keepAfterRouteChange: true\n        });\n        this.router.navigate(['/pets']);\n      },\n      error: error => {\n        this.alertService.error(error);\n        this.loading = false;\n      }\n    });\n  }\n  loadPet(id) {\n    this.petService.getById(id).pipe(first()).subscribe(pet => {\n      this.form.patchValue(pet);\n    });\n  }\n  loadAllPets() {\n    this.petService.getAllPets().pipe(first()).subscribe(pets => {\n      this.pets = pets;\n    });\n  }\n  onCancel() {\n    this.router.navigate(['/pets']);\n  }\n};\nAddPetComponent = __decorate([Component({\n  templateUrl: 'add-pet.component.html'\n})], AddPetComponent);\nexport { AddPetComponent };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}